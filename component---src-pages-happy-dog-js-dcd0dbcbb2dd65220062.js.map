{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/blogText.js","webpack:///./src/pages/happy/dog.js","webpack:///./src/pages/happy/quanitifedSelfLayout.js","webpack:///./src/components/happiestDog.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","paddingTop","Date","getFullYear","href","BlogPost","marginTop","Dog","QuantifiedSelfLayout","id","HappiestDog","componentDidMount","divElement","document","getElementById","vizElement","getElementsByTagName","offsetWidth","width","height","scriptElement","createElement","src","parentNode","insertBefore","render","class","position","alt","border","display","name","value","React","Component"],"mappings":"8IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCUAY,IArCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRW,WAAY,IAGd,8BAAOL,GACP,sCACK,IAAIM,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,uICxCV,yBAWeC,IATE,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAClB,OACE,yBAAKX,MAAO,CAAEqB,UAAW,SACvB,gDACCV,K,kCCNP,oEAsDeW,UAzCH,WACV,OACE,kBAAC,UAAD,KACG,IACD,kBAAC,IAAD,MAAgB,IAChB,kBAAC,IAAD,KACE,mSAMA,wWAKgE,KAEhE,mQAI2B,sCAJ3B,2ZAYA,0D,kCC5CR,oEAsDeC,UAxCc,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAC9B,OACE,kBAAC,IAAD,KACE,yBAAKa,GAAG,0BACN,qDACA,w4BAeA,2JAIA,yBAAKA,GAAG,cACN,kBAAC,OAAD,CAAMlB,GAAG,cAAT,2BACA,kBAAC,OAAD,CAAMA,GAAG,gBAAT,gCACA,kBAAC,OAAD,CAAMA,GAAG,mBAAT,0BAEF,6BACCK,M,+DC1CHc,E,wLACJC,kBAAA,WACE,IAAIC,EAAaC,SAASC,eAAe,oBACrCC,EAAaH,EAAWI,qBAAqB,UAAU,GACvDJ,EAAWK,YAAc,KAC3BF,EAAW9B,MAAMiC,MAAQ,QACzBH,EAAW9B,MAAMkC,OAAS,SACjBP,EAAWK,YAAc,KAClCF,EAAW9B,MAAMiC,MAAQ,QACzBH,EAAW9B,MAAMkC,OAAS,UAE1BJ,EAAW9B,MAAMiC,MAAQ,OACzBH,EAAW9B,MAAMkC,OAAS,SAE5B,IAAIC,EAAgBP,SAASQ,cAAc,UAC3CD,EAAcE,IAAM,uDACpBP,EAAWQ,WAAWC,aAAaJ,EAAeL,I,EAGpDU,OAAA,WACE,OACE,yBACEC,MAAM,qBACNjB,GAAG,mBACHxB,MAAO,CAAE0C,SAAU,WAAYvC,OAAQ,SAEvC,kCACE,uBAAGgB,KAAK,KACN,yBACEwB,IAAI,IACJN,IAAI,sEACJrC,MAAO,CAAE4C,OAAQ,YAIvB,4BAAQH,MAAM,aAAazC,MAAO,CAAE6C,QAAS,SAC3C,2BAAOC,KAAK,WAAWC,MAAM,wCAC7B,2BAAOD,KAAK,qBAAqBC,MAAM,MACvC,2BAAOD,KAAK,YAAYC,MAAM,KAC9B,2BAAOD,KAAK,OAAOC,MAAM,kBACzB,2BAAOD,KAAK,OAAOC,MAAM,OACzB,2BAAOD,KAAK,UAAUC,MAAM,QAC5B,2BACED,KAAK,eACLC,MAAM,oEAER,2BAAOD,KAAK,qBAAqBC,MAAM,QACvC,2BAAOD,KAAK,uBAAuBC,MAAM,QACzC,2BAAOD,KAAK,kBAAkBC,MAAM,QACpC,2BAAOD,KAAK,kBAAkBC,MAAM,QACpC,2BAAOD,KAAK,gBAAgBC,MAAM,W,GAlDlBC,IAAMC,WAyDjBxB","file":"component---src-pages-happy-dog-js-dcd0dbcbb2dd65220062.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nconst BlogPost = ({ children }) => {\n  return (\n    <div style={{ marginTop: \"40px\" }}>\n      <h2>Notes on process</h2>\n      {children}\n    </div>\n  )\n}\n\nexport default BlogPost\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport QuantifiedSelfLayout from \"./quanitifedSelfLayout\"\nimport HappiestDog from \"../../components/happiestDog\"\nimport BlogPost from \"../../components/blogText\"\n\nconst Dog = () => {\n  return (\n    <QuantifiedSelfLayout>\n      {\" \"}\n      <HappiestDog />{\" \"}\n      <BlogPost>\n        <p>\n          During our undergrad years, my husband and I were broke. Really broke.\n          And therapy is expensive. My husband began working for a suicide\n          prevention hotline, and I was concerned for his mental health. I\n          insisted he needed a dog in his life. So we adopted Mousse.\n        </p>\n        <p>\n          Perhaps unsurprisingly, dogs don't naturally produce much data\n          throughout their day. We humans, however do take lots of pictures. I\n          have has an embarassing number of photos of Mousse printed on canvas\n          littered throughout our house. (Actually as I type this, my husband\n          knocked one off the wall throwing a toy for Mousse to catch.){\" \"}\n        </p>\n        <p>\n          I've always liked the github contribution graph, so I chose to use\n          that style. It took a little bit of work to make the breaks on the\n          years so that the format was more logical. Of course no visualization\n          about pictures can exist <i>without</i> pictures, so I needed those to\n          be in the tooltip. I used shapes to do that which wasn't as tedious as\n          I anticipated. Probably because I had learned some tricks from having\n          done the shoe visualization already. One particular problem that came\n          up was that there were some months that only had videos or had no\n          photos at all. I used an old SVG illustration of Mousse that I created\n          earlier this year for that.\n        </p>\n        <p> Enjoy my adorable dog!</p>\n      </BlogPost>\n    </QuantifiedSelfLayout>\n  )\n}\n\nDog.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Dog\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./happy.css\"\nimport Layout from \"../../components/layout\"\n\nconst QuantifiedSelfLayout = ({ children }) => {\n  return (\n    <Layout>\n      <div id=\"quantified-self-layout\">\n        <h1>Quanitified self: Joy</h1>\n        <p>\n          When I began working on this project, I had some fear that I wouldn't\n          like what I saw in my data, whichever data I chose. Unlike my peers, I\n          had no interest in self-accountability. So I began with a topic: Joy.\n          What are the things that make me happy in everyday life? The things\n          that make an eh day not so eh? Where do I look to keep my spirits\n          buoyed? It didn't take long to figure it out. During my workday, it's\n          my happy playlist (creatively titled The Happiest Playlist). It starts\n          with Barbra Streisand and doesn't lose steam after that. I also have a\n          particularly wonderful shoe collection, so I always have the option to\n          just look down if I want to smile. At the end of my day I come home to\n          my very pretty dog, Mousse. She is hilarious and sweet and a delight\n          to come home to. She usually greets me with a wagging tail that moves\n          her whole body and a toy as a gift.\n        </p>\n        <p>\n          I was smiling the entire time I was putting these together. I hope the\n          visualizations can bring you a little bit of joy too.\n        </p>\n        <div id=\"happy-list\">\n          <Link to=\"/happy/dog\">The Happiest Dog Photos</Link>\n          <Link to=\"/happy/shoes\">The Happiest Shoe Collection</Link>\n          <Link to=\"/happy/playlist\">The Happiest Playlist</Link>\n        </div>\n        <hr />\n        {children}\n      </div>\n    </Layout>\n  )\n}\n\nQuantifiedSelfLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default QuantifiedSelfLayout\n","import React from \"react\"\n\nclass HappiestDog extends React.Component {\n  componentDidMount() {\n    var divElement = document.getElementById(\"viz1572122314586\")\n    var vizElement = divElement.getElementsByTagName(\"object\")[0]\n    if (divElement.offsetWidth > 800) {\n      vizElement.style.width = \"800px\"\n      vizElement.style.height = \"502px\"\n    } else if (divElement.offsetWidth > 500) {\n      vizElement.style.width = \"800px\"\n      vizElement.style.height = \"502px\"\n    } else {\n      vizElement.style.width = \"100%\"\n      vizElement.style.height = \"727px\"\n    }\n    var scriptElement = document.createElement(\"script\")\n    scriptElement.src = \"https://public.tableau.com/javascripts/api/viz_v1.js\"\n    vizElement.parentNode.insertBefore(scriptElement, vizElement)\n  }\n\n  render() {\n    return (\n      <div\n        class=\"tableauPlaceholder\"\n        id=\"viz1572122314586\"\n        style={{ position: \"relative\", margin: \"auto\" }}\n      >\n        <noscript>\n          <a href=\"#\">\n            <img\n              alt=\" \"\n              src=\"https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Mousse&#47;Mousse&#47;1_rss.png\"\n              style={{ border: \"none\" }}\n            />\n          </a>\n        </noscript>\n        <object class=\"tableauViz\" style={{ display: \"none\" }}>\n          <param name=\"host_url\" value=\"https%3A%2F%2Fpublic.tableau.com%2F\" />\n          <param name=\"embed_code_version\" value=\"3\" />\n          <param name=\"site_root\" value=\"\" />\n          <param name=\"name\" value=\"Mousse&#47;Mousse\" />\n          <param name=\"tabs\" value=\"no\" />\n          <param name=\"toolbar\" value=\"yes\" />\n          <param\n            name=\"static_image\"\n            value=\"https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Mousse&#47;Mousse&#47;1.png\"\n          />\n          <param name=\"animate_transition\" value=\"yes\" />\n          <param name=\"display_static_image\" value=\"yes\" />\n          <param name=\"display_spinner\" value=\"yes\" />\n          <param name=\"display_overlay\" value=\"yes\" />\n          <param name=\"display_count\" value=\"yes\" />\n        </object>\n      </div>\n    )\n  }\n}\n\nexport default HappiestDog\n"],"sourceRoot":""}