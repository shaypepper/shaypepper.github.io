{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/happy/shoes.js","webpack:///./src/components/happiestShoes.js","webpack:///./src/components/blogText.js","webpack:///./src/pages/happy/quanitifedSelfLayout.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","paddingTop","Date","getFullYear","href","Shoes","HappiestShoes","componentDidMount","divElement","document","getElementById","vizElement","getElementsByTagName","offsetWidth","width","height","scriptElement","createElement","src","parentNode","insertBefore","render","class","id","position","alt","border","display","name","value","React","Component","BlogPost","marginTop","QuantifiedSelfLayout"],"mappings":"8IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCUAY,IArCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRW,WAAY,IAGd,8BAAOL,GACP,sCACK,IAAIM,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,kCCxCV,oEAkFeC,UArED,SAAC,GAAiB,EAAfT,SACf,OACE,kBAAC,UAAD,KACG,IACD,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,ibAQA,qQAI4B,KAE5B,spBAYA,0hCAiBA,2BACG,IADH,iQAOA,iI,oKCnEFU,E,wLACJC,kBAAA,WACE,IAAIC,EAAaC,SAASC,eAAe,oBACrCC,EAAaH,EAAWI,qBAAqB,UAAU,GACvDJ,EAAWK,YAAc,KAC3BF,EAAW1B,MAAM6B,MAAQ,QACzBH,EAAW1B,MAAM8B,OAAS,SACjBP,EAAWK,YAAc,KAClCF,EAAW1B,MAAM6B,MAAQ,QACzBH,EAAW1B,MAAM8B,OAAS,UAE1BJ,EAAW1B,MAAM6B,MAAQ,OACzBH,EAAW1B,MAAM8B,OAAS,SAE5B,IAAIC,EAAgBP,SAASQ,cAAc,UAC3CD,EAAcE,IAAM,uDACpBP,EAAWQ,WAAWC,aAAaJ,EAAeL,I,EAGpDU,OAAA,WACE,OACE,yBACEC,MAAM,qBACNC,GAAG,mBACHtC,MAAO,CAAEuC,SAAU,WAAYpC,OAAQ,SAEvC,kCACE,uBAAGgB,KAAK,KACN,yBACEqB,IAAI,IACJP,IAAI,kEACJjC,MAAO,CAAEyC,OAAQ,YAIvB,4BAAQJ,MAAM,aAAarC,MAAO,CAAE0C,QAAS,SAC3C,2BAAOC,KAAK,WAAWC,MAAM,wCAC7B,2BAAOD,KAAK,qBAAqBC,MAAM,MACvC,2BAAOD,KAAK,OAAOC,MAAM,qBACzB,2BAAOD,KAAK,UAAUC,MAAM,QAC5B,2BACED,KAAK,eACLC,MAAM,gEAER,2BAAOD,KAAK,qBAAqBC,MAAM,QACvC,2BAAOD,KAAK,uBAAuBC,MAAM,QACzC,2BAAOD,KAAK,kBAAkBC,MAAM,QACpC,2BAAOD,KAAK,kBAAkBC,MAAM,QACpC,2BAAOD,KAAK,gBAAgBC,MAAM,W,GAhDhBC,IAAMC,WAuDnBzB,O,kCCzDf,yBAWe0B,IATE,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SAClB,OACE,yBAAKX,MAAO,CAAEgD,UAAW,SACvB,gDACCrC,K,kCCNP,oEAsDesC,UAxCc,SAAC,GAAkB,IAAhBtC,EAAe,EAAfA,SAC9B,OACE,kBAAC,IAAD,KACE,yBAAK2B,GAAG,0BACN,qDACA,w4BAeA,2JAIA,yBAAKA,GAAG,cACN,kBAAC,OAAD,CAAMhC,GAAG,cAAT,2BACA,kBAAC,OAAD,CAAMA,GAAG,gBAAT,gCACA,kBAAC,OAAD,CAAMA,GAAG,mBAAT,0BAEF,6BACCK","file":"component---src-pages-happy-shoes-js-2fcd8fdc8f5c81a46697.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport QuantifiedSelfLayout from \"./quanitifedSelfLayout\"\nimport HappiestShoes from \"../../components/happiestShoes\"\nimport BlogPost from \"../../components/blogText\"\n\nconst Shoes = ({ children }) => {\n  return (\n    <QuantifiedSelfLayout>\n      {\" \"}\n      <HappiestShoes />\n      <BlogPost>\n        <p>\n          My aunt was in town one weekend. I had no idea when she sent me a\n          photo of the John Fluevog store that my shopping habits were about to\n          completely change. I quickly fell in love with the brand, but\n          obviously the shoes were expensive. My husband Zack changed things\n          when he bought me a pair on my birthday that turned out to be the most\n          comfortable pair of shoes I have ever owned. The flowered Leaders.\n        </p>\n        <p>\n          Since then, I have frequented second hand websites and John Fluevog\n          sales in-store. I have built a high quality shoe collection from the\n          ground up over the last year and a half. Most are Fluevogs, but some\n          are from other companies.{\" \"}\n        </p>\n        <p>\n          When thinking about how to visualize one of my favorite parts of my\n          day, choosing shoes, I knew I wanted images of each shoe. Shoes like\n          mine are only interesting when you can see them. I created a data set\n          from online purchase data and a very helpful sales associate from the\n          Fluevog store. I had the obvious price, location, date information for\n          all of them. I did take some time to document heel height, colors, and\n          a few other attributes. At the end of the day, I just didn't find\n          those things interesting enough for a visualization. The theme is\n          building a shoe collection, so time and price were the most relevant\n          attributes.\n        </p>\n        <p>\n          Like the dog photos, I used shapes in Tableau to show photos. One\n          thing I felt strongly about was not using tooltips since it obscured\n          the chart itself. This is where I began to explore Tableau actions.\n          One thing I wanted was for a show to be highlighted in both charts if\n          it was highlighted in the other. I also wanted an image of the shoe to\n          exist embedded in the visualization. Basically, I wanted hover\n          functionality without tooltips. This was tricky. I needed to create a\n          workbook that had the photo and description of each shoe but was\n          broken out into pages. I then needed this to be in the tooltips in\n          each of the charts. Then I needed the tooltips to turned off on those\n          charts. This linked everything together so that the photo could change\n          in the upper righthand corner. The other thing that made this tricky\n          was that on tableau desktop, the hover functionality actually doesn't\n          work (!). Through some freak accident, I realized that it would work\n          once it was uplodaed, just not on my desktop as I work on it.\n        </p>\n        <p>\n          {\" \"}\n          Overall I really love that this visualization is simple and clean\n          while including enough design to be impressive. It doesn't\n          over-communicate or overwhelm, but showcases my precious precious\n          shoes. I suppose in a lot of ways they do speak for themselves\n        </p>\n        <p>\n          In the future I'd like to have more shoes in this visualization\n          (because I've purchased more).\n        </p>\n      </BlogPost>\n    </QuantifiedSelfLayout>\n  )\n}\n\nShoes.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Shoes\n","import React from \"react\"\n\nclass HappiestShoes extends React.Component {\n  componentDidMount() {\n    var divElement = document.getElementById(\"viz1572123754567\")\n    var vizElement = divElement.getElementsByTagName(\"object\")[0]\n    if (divElement.offsetWidth > 800) {\n      vizElement.style.width = \"800px\"\n      vizElement.style.height = \"977px\"\n    } else if (divElement.offsetWidth > 500) {\n      vizElement.style.width = \"800px\"\n      vizElement.style.height = \"977px\"\n    } else {\n      vizElement.style.width = \"100%\"\n      vizElement.style.height = \"977px\"\n    }\n    var scriptElement = document.createElement(\"script\")\n    scriptElement.src = \"https://public.tableau.com/javascripts/api/viz_v1.js\"\n    vizElement.parentNode.insertBefore(scriptElement, vizElement)\n  }\n\n  render() {\n    return (\n      <div\n        class=\"tableauPlaceholder\"\n        id=\"viz1572123754567\"\n        style={{ position: \"relative\", margin: \"auto\" }}\n      >\n        <noscript>\n          <a href=\"#\">\n            <img\n              alt=\" \"\n              src=\"https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;9D&#47;9D35CJ9DK&#47;1_rss.png\"\n              style={{ border: \"none\" }}\n            />\n          </a>\n        </noscript>\n        <object class=\"tableauViz\" style={{ display: \"none\" }}>\n          <param name=\"host_url\" value=\"https%3A%2F%2Fpublic.tableau.com%2F\" />\n          <param name=\"embed_code_version\" value=\"3\" />\n          <param name=\"path\" value=\"shared&#47;9D35CJ9DK\" />\n          <param name=\"toolbar\" value=\"yes\" />\n          <param\n            name=\"static_image\"\n            value=\"https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;9D&#47;9D35CJ9DK&#47;1.png\"\n          />\n          <param name=\"animate_transition\" value=\"yes\" />\n          <param name=\"display_static_image\" value=\"yes\" />\n          <param name=\"display_spinner\" value=\"yes\" />\n          <param name=\"display_overlay\" value=\"yes\" />\n          <param name=\"display_count\" value=\"yes\" />\n        </object>\n      </div>\n    )\n  }\n}\n\nexport default HappiestShoes\n","import React from \"react\"\n\nconst BlogPost = ({ children }) => {\n  return (\n    <div style={{ marginTop: \"40px\" }}>\n      <h2>Notes on process</h2>\n      {children}\n    </div>\n  )\n}\n\nexport default BlogPost\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./happy.css\"\nimport Layout from \"../../components/layout\"\n\nconst QuantifiedSelfLayout = ({ children }) => {\n  return (\n    <Layout>\n      <div id=\"quantified-self-layout\">\n        <h1>Quanitified self: Joy</h1>\n        <p>\n          When I began working on this project, I had some fear that I wouldn't\n          like what I saw in my data, whichever data I chose. Unlike my peers, I\n          had no interest in self-accountability. So I began with a topic: Joy.\n          What are the things that make me happy in everyday life? The things\n          that make an eh day not so eh? Where do I look to keep my spirits\n          buoyed? It didn't take long to figure it out. During my workday, it's\n          my happy playlist (creatively titled The Happiest Playlist). It starts\n          with Barbra Streisand and doesn't lose steam after that. I also have a\n          particularly wonderful shoe collection, so I always have the option to\n          just look down if I want to smile. At the end of my day I come home to\n          my very pretty dog, Mousse. She is hilarious and sweet and a delight\n          to come home to. She usually greets me with a wagging tail that moves\n          her whole body and a toy as a gift.\n        </p>\n        <p>\n          I was smiling the entire time I was putting these together. I hope the\n          visualizations can bring you a little bit of joy too.\n        </p>\n        <div id=\"happy-list\">\n          <Link to=\"/happy/dog\">The Happiest Dog Photos</Link>\n          <Link to=\"/happy/shoes\">The Happiest Shoe Collection</Link>\n          <Link to=\"/happy/playlist\">The Happiest Playlist</Link>\n        </div>\n        <hr />\n        {children}\n      </div>\n    </Layout>\n  )\n}\n\nQuantifiedSelfLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default QuantifiedSelfLayout\n"],"sourceRoot":""}